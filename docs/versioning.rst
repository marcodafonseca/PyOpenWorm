.. _versioning:

Software Versioning
===================
The |owm| library follows the `semanitc versioning scheme
<https://semver.org>`_. For the sake of versioning, the software interface
consists of:

#. Extensions to the :command:`owm` command line defined
#. All "public" definitions (i.e., those whose names do not begin with '_') in
   the `owmeta` package, sub-packages, and sub-modules
#. The format of RDF data generated by subclasses of
   `owmeta_core.dataobject.DataObject` and defined in the `owmeta` package,
   sub-packages, and sub-modules
#. The API documentation for the `owmeta` package, sub-packages, and
   sub-modules

In addition, any changes to the packages released on PyPI mandates at least a
patch version increment.

For Git, our software version control system, software releases will be
represented as tags in the form ``v$semantic_version`` with all components of
the semantic version represented.

Documentation versioning
------------------------
The documentation will have a distinct version number from the software. The
version numbers for the documentation must change at least as often as the
software versioning since the relationship of the documentation to the software
necessarily changes. However, changes _only_ to the non-API documentation will
not be a cause for a change to any of the components of the software version
number. For documentation releases which coincide with software releases, the
documentation version number will simply be the software version number. Any
subsequent change to documentation between software releases will compel an
increase in the documentation version number by one. The documentation version
number for such documentation releases will be represented as
``${software_version}+docs${documentation_increment}``.

